// <auto-generated />
using System;
using BackEnd.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackEnd.Migrations
{
    [DbContext(typeof(PCShopContext))]
    partial class PCShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("BackEnd.Models.Memory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int?>("MotherboardID")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int")
                        .HasColumnName("Velicina");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tip");

                    b.HasKey("ID");

                    b.HasIndex("MotherboardID");

                    b.ToTable("Memories");
                });

            modelBuilder.Entity("BackEnd.Models.Motherboard", b =>
                {
                    b.Property<int>("MotherboardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("GPU")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Graficka_Kartica");

                    b.Property<int>("PCID")
                        .HasColumnType("int");

                    b.Property<string>("cpu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Procesor");

                    b.Property<string>("maticna")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Ime_Maticne");

                    b.Property<int>("maxNVME")
                        .HasColumnType("int")
                        .HasColumnName("Max_NVME");

                    b.Property<int>("maxRam")
                        .HasColumnType("int")
                        .HasColumnName("Max_Ram");

                    b.Property<int>("maxSATA")
                        .HasColumnType("int")
                        .HasColumnName("Max_Sata");

                    b.Property<int>("ramSlots")
                        .HasColumnType("int")
                        .HasColumnName("Broj_Ram_Slota");

                    b.HasKey("MotherboardID");

                    b.HasIndex("PCID")
                        .IsUnique();

                    b.ToTable("Maticna_Ploca");
                });

            modelBuilder.Entity("BackEnd.Models.PC", b =>
                {
                    b.Property<int>("PCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Kuciste")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Kuciste");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Ime");

                    b.Property<string>("PSU")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Napajanje");

                    b.Property<int>("Poz")
                        .HasColumnType("int")
                        .HasColumnName("Pozicija");

                    b.Property<int?>("WarehouseID")
                        .HasColumnType("int");

                    b.Property<string>("price")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cena");

                    b.HasKey("PCID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("Racunari");
                });

            modelBuilder.Entity("BackEnd.Models.Warehouse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("N")
                        .HasColumnType("int")
                        .HasColumnName("Kapacitet");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Naziv");

                    b.HasKey("ID");

                    b.ToTable("PC_Warehouse");
                });

            modelBuilder.Entity("BackEnd.Models.Memory", b =>
                {
                    b.HasOne("BackEnd.Models.Motherboard", "Motherboard")
                        .WithMany("Memory")
                        .HasForeignKey("MotherboardID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Motherboard");
                });

            modelBuilder.Entity("BackEnd.Models.Motherboard", b =>
                {
                    b.HasOne("BackEnd.Models.PC", "PC")
                        .WithOne("motherboard")
                        .HasForeignKey("BackEnd.Models.Motherboard", "PCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PC");
                });

            modelBuilder.Entity("BackEnd.Models.PC", b =>
                {
                    b.HasOne("BackEnd.Models.Warehouse", "Warehouse")
                        .WithMany("Racunari")
                        .HasForeignKey("WarehouseID");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("BackEnd.Models.Motherboard", b =>
                {
                    b.Navigation("Memory");
                });

            modelBuilder.Entity("BackEnd.Models.PC", b =>
                {
                    b.Navigation("motherboard");
                });

            modelBuilder.Entity("BackEnd.Models.Warehouse", b =>
                {
                    b.Navigation("Racunari");
                });
#pragma warning restore 612, 618
        }
    }
}
